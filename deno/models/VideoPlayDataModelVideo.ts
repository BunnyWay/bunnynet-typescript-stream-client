/**
 * Stream API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@bunny.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CaptionModel } from '../models/CaptionModel.ts';
import { ChapterModel } from '../models/ChapterModel.ts';
import { MetaTagModel } from '../models/MetaTagModel.ts';
import { MomentModel } from '../models/MomentModel.ts';
import { TranscodingMessageModel } from '../models/TranscodingMessageModel.ts';
import { VideoModel } from '../models/VideoModel.ts';
import { VideoModelStatus } from '../models/VideoModelStatus.ts';
import { HttpFile } from '../http/http.ts';

/**
* Video data.
*/
export class VideoPlayDataModelVideo {
    /**
    * The ID of the video library that the video belongs to
    */
    'videoLibraryId'?: number;
    /**
    * The unique ID of the video
    */
    'guid'?: string | null;
    /**
    * The title of the video
    */
    'title'?: string | null;
    /**
    * The date when the video was uploaded
    */
    'dateUploaded'?: Date;
    /**
    * The number of views the video received
    */
    'views'?: number;
    /**
    * Determines if the video is publically accessible
    */
    'isPublic'?: boolean;
    /**
    * The duration of the video in seconds
    */
    'length'?: number;
    'status'?: VideoModelStatus;
    /**
    * The framerate of the video
    */
    'framerate'?: number;
    /**
    * The rotation of the video
    */
    'rotation'?: number | null;
    /**
    * The width of the original video file
    */
    'width'?: number;
    /**
    * The height of the original video file
    */
    'height'?: number;
    /**
    * The available resolutions of the video
    */
    'availableResolutions'?: string | null;
    /**
    * The number of thumbnails generated for this video
    */
    'thumbnailCount'?: number;
    /**
    * The current encode progress of the video
    */
    'encodeProgress'?: number;
    /**
    * The amount of storage used by this video
    */
    'storageSize'?: number;
    /**
    * The list of captions available for the video
    */
    'captions'?: Array<CaptionModel> | null;
    /**
    * Determines if the video has MP4 fallback files generated
    */
    'hasMP4Fallback'?: boolean;
    /**
    * The ID of the collection where the video belongs
    */
    'collectionId'?: string | null;
    /**
    * The file name of the thumbnail inside of the storage
    */
    'thumbnailFileName'?: string | null;
    /**
    * The average watch time of the video in seconds
    */
    'averageWatchTime'?: number;
    /**
    * The total video watch time in seconds
    */
    'totalWatchTime'?: number;
    /**
    * The automatically detected category of the video
    */
    'category'?: string | null;
    /**
    * The list of chapters available for the video
    */
    'chapters'?: Array<ChapterModel> | null;
    /**
    * The list of moments available for the video
    */
    'moments'?: Array<MomentModel> | null;
    /**
    * The list of meta tags that have been added to the video
    */
    'metaTags'?: Array<MetaTagModel> | null;
    /**
    * The list of transcoding messages that describe potential issues while the video was transcoding
    */
    'transcodingMessages'?: Array<TranscodingMessageModel> | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "videoLibraryId",
            "baseName": "videoLibraryId",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "guid",
            "baseName": "guid",
            "type": "string",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "dateUploaded",
            "baseName": "dateUploaded",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "views",
            "baseName": "views",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "isPublic",
            "baseName": "isPublic",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "length",
            "baseName": "length",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "VideoModelStatus",
            "format": ""
        },
        {
            "name": "framerate",
            "baseName": "framerate",
            "type": "number",
            "format": "double"
        },
        {
            "name": "rotation",
            "baseName": "rotation",
            "type": "number",
            "format": ""
        },
        {
            "name": "width",
            "baseName": "width",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "height",
            "baseName": "height",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "availableResolutions",
            "baseName": "availableResolutions",
            "type": "string",
            "format": ""
        },
        {
            "name": "thumbnailCount",
            "baseName": "thumbnailCount",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "encodeProgress",
            "baseName": "encodeProgress",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "storageSize",
            "baseName": "storageSize",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "captions",
            "baseName": "captions",
            "type": "Array<CaptionModel>",
            "format": ""
        },
        {
            "name": "hasMP4Fallback",
            "baseName": "hasMP4Fallback",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "collectionId",
            "baseName": "collectionId",
            "type": "string",
            "format": ""
        },
        {
            "name": "thumbnailFileName",
            "baseName": "thumbnailFileName",
            "type": "string",
            "format": ""
        },
        {
            "name": "averageWatchTime",
            "baseName": "averageWatchTime",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "totalWatchTime",
            "baseName": "totalWatchTime",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "category",
            "baseName": "category",
            "type": "string",
            "format": ""
        },
        {
            "name": "chapters",
            "baseName": "chapters",
            "type": "Array<ChapterModel>",
            "format": ""
        },
        {
            "name": "moments",
            "baseName": "moments",
            "type": "Array<MomentModel>",
            "format": ""
        },
        {
            "name": "metaTags",
            "baseName": "metaTags",
            "type": "Array<MetaTagModel>",
            "format": ""
        },
        {
            "name": "transcodingMessages",
            "baseName": "transcodingMessages",
            "type": "Array<TranscodingMessageModel>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return VideoPlayDataModelVideo.attributeTypeMap;
    }

    public constructor() {
    }
}

